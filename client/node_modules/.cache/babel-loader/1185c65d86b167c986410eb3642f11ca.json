{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\src\\\\components\\\\main.js\";\nimport React, { useState, useEffect, useContext, useReducer, usePrevious } from 'react';\nimport { Container, Box, Heading, Card, Image } from 'gestalt';\nimport Strapi from \"strapi-sdk-javascript/build/main\";\nvar apiUrl = process.env.API_URL || \"http://localhost:1337\";\nvar strapi = new Strapi(apiUrl);\nexport default function Main() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      brands = _useState2[0],\n      setBrands = _useState2[1];\n\n  useEffect(\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var _ref2, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return strapi.request('POST', '/graphql', {\n              data: {\n                query: \"query {\\n                        brands {\\n                         _id\\n                         name\\n                         description\\n                         image {\\n                           url\\n                         }\\n                       }\\n                       }\"\n              }\n            });\n\n          case 3:\n            _ref2 = _context.sent;\n            data = _ref2.data;\n            setBrands(data.brands);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[0, 8]]);\n  })), []);\n  return React.createElement(React.Fragment, null, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginBottom: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    color: \"midnight\",\n    size: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Brew Brands\")), React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"around\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, brands.map(function (brand) {\n    return React.createElement(Box, {\n      key: brand._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Card, {\n      image: React.createElement(Box, {\n        height: 200,\n        width: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Image, {\n        alt: \"brand\",\n        naturalHeight: 1,\n        naturalWidth: 1,\n        src: \"\".concat(apiUrl).concat(brand.image.url),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }))));\n}","map":{"version":3,"sources":["C:\\Users\\bellis\\Desktop\\onstore\\lstore\\client\\src\\components\\main.js"],"names":["React","useState","useEffect","useContext","useReducer","usePrevious","Container","Box","Heading","Card","Image","Strapi","apiUrl","process","env","API_URL","strapi","Main","brands","setBrands","request","data","query","console","error","map","brand","_id","image","url"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,EAAgDC,UAAhD,EAA4DC,WAA5D,QAA8E,OAA9E;AACA,SAAQC,SAAR,EAAmBC,GAAnB,EAAwBC,OAAxB,EAAiCC,IAAjC,EAAuCC,KAAvC,QAAmD,SAAnD;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,IAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,OAAZ,IAAuB,uBAAtC;AACA,IAAMC,MAAM,GAAG,IAAIL,MAAJ,CAAWC,MAAX,CAAf;AACA,eAAe,SAASK,IAAT,GAAgB;AAAA,kBACHhB,QAAQ,CAAC,EAAD,CADL;AAAA;AAAA,MACxBiB,MADwB;AAAA,MAChBC,SADgB;;AAE1BjB,EAAAA,SAAS;AAAA;AAAA;AAAA;AAAA,2BAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEiBc,MAAM,CAACI,OAAP,CAAe,MAAf,EAAuB,UAAvB,EAAmC;AACpDC,cAAAA,IAAI,EAAE;AACFC,gBAAAA,KAAK;AADH;AAD8C,aAAnC,CAFjB;;AAAA;AAAA;AAEGD,YAAAA,IAFH,SAEGA,IAFH;AAgBJF,YAAAA,SAAS,CAACE,IAAI,CAACH,MAAN,CAAT;AAhBI;AAAA;;AAAA;AAAA;AAAA;AAkBJK,YAAAA,OAAO,CAACC,KAAR;;AAlBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAF,IAqBR,EArBQ,CAAT;AAwBD,SACA,0CACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,GAAD;AACA,IAAA,OAAO,EAAC,MADR;AAEA,IAAA,cAAc,EAAC,QAFf;AAGA,IAAA,YAAY,EAAE,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKA,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,UAAf;AAA0B,IAAA,IAAI,EAAC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALA,CAHJ,EAcI,oBAAC,GAAD;AACA,IAAA,OAAO,EAAC,MADR;AAEA,IAAA,cAAc,EAAC,QAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKN,MAAM,CAACO,GAAP,CAAW,UAAAC,KAAK;AAAA,WACb,oBAAC,GAAD;AACA,MAAA,GAAG,EAAEA,KAAK,CAACC,GADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI,oBAAC,IAAD;AACA,MAAA,KAAK,EAAG,oBAAC,GAAD;AAAK,QAAA,MAAM,EAAE,GAAb;AAAkB,QAAA,KAAK,EAAE,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ,oBAAC,KAAD;AACA,QAAA,GAAG,EAAC,OADJ;AAEA,QAAA,aAAa,EAAE,CAFf;AAGA,QAAA,YAAY,EAAE,CAHd;AAIA,QAAA,GAAG,YAAKf,MAAL,SAAcc,KAAK,CAACE,KAAN,CAAYC,GAA1B,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADI,CADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADa;AAAA,GAAhB,CAJL,CAdJ,CADJ,CADA;AAwCH","sourcesContent":["import React, {useState, useEffect, useContext, useReducer, usePrevious} from 'react';\r\nimport {Container, Box, Heading, Card, Image} from 'gestalt';\r\nimport Strapi from \"strapi-sdk-javascript/build/main\";\r\nconst apiUrl = process.env.API_URL || \"http://localhost:1337\";\r\nconst strapi = new Strapi(apiUrl);\r\nexport default function Main() {\r\nconst [brands, setBrands] = useState([])\r\n     useEffect( async ()  => {\r\n         try {\r\n            const {data} = await strapi.request('POST', '/graphql', {\r\n                data: {\r\n                    query: `query {\r\n                        brands {\r\n                         _id\r\n                         name\r\n                         description\r\n                         image {\r\n                           url\r\n                         }\r\n                       }\r\n                       }`\r\n                }\r\n            });\r\n            setBrands(data.brands)\r\n         } catch (err){\r\n            console.error(err)\r\n         }\r\n       \r\n    },[])\r\n\r\n\r\n    return(\r\n    <>\r\n        <Container>\r\n            {/* Brands sectoin */}\r\n\r\n            <Box\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n            marginBottom={2}\r\n            >\r\n            <Heading color=\"midnight\" size=\"md\">\r\n                Brew Brands\r\n            </Heading>\r\n            </Box>\r\n\r\n            {/* brands */}\r\n            <Box\r\n            display=\"flex\"\r\n            justifyContent=\"around\"\r\n            >\r\n                {brands.map(brand => (\r\n                    <Box\r\n                    key={brand._id}\r\n                    >\r\n                        <Card\r\n                        image={ <Box height={200} width={200}>\r\n                            <Image\r\n                            alt=\"brand\"\r\n                            naturalHeight={1}\r\n                            naturalWidth={1}\r\n                            src={`${apiUrl}${brand.image.url}`}\r\n                            />\r\n                        </Box>}\r\n                        ></Card>\r\n                    </Box>\r\n                ))}\r\n            </Box>\r\n        </Container>\r\n      </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}