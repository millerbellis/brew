{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar qs_1 = __importDefault(require(\"qs\"));\n\nvar react_1 = require(\"react\");\n\nexports.html5HistoryAdapter = {\n  listen: function listen(listener) {\n    window.addEventListener('popstate', listener);\n    return function () {\n      return window.removeEventListener('popstate', listener);\n    };\n  },\n  location: window.location,\n  push: function push(_a) {\n    var search = _a.search;\n    window.history.pushState(window.history.state, document.title, search);\n    window.dispatchEvent(new window.Event('popstate'));\n  },\n  replace: function replace(_a) {\n    var search = _a.search;\n    window.history.replaceState(window.history.state, document.title, search);\n    window.dispatchEvent(new window.Event('popstate'));\n  }\n};\n\nvar alwaysReplace = function alwaysReplace() {\n  return false;\n};\n\nvar parseConfig = function parseConfig(config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  return {\n    history: config.history ? config.history : exports.html5HistoryAdapter,\n    serialisation: {\n      parse: config.serialisation && config.serialisation.parse ? config.serialisation.parse : function (queryString) {\n        return qs_1.default.parse(queryString, {\n          ignoreQueryPrefix: true\n        });\n      },\n      stringify: config.serialisation && config.serialisation.stringify ? config.serialisation.stringify : function (state) {\n        return qs_1.default.stringify(state, {\n          addQueryPrefix: true\n        });\n      }\n    },\n    shouldPushState: config.shouldPushState || alwaysReplace\n  };\n};\n\nvar UrlState =\n/** @class */\nfunction (_super) {\n  __extends(UrlState, _super);\n\n  function UrlState(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.unsubscribe = null;\n\n    _this.onLocationChange = function () {\n      var serialisation = parseConfig(_this.props.config).serialisation;\n\n      _this.setState(serialisation.parse(_this.history.location.search));\n    };\n\n    _this.setUrlState = function (newState) {\n      var serialisation = parseConfig(_this.props.config).serialisation;\n\n      var nextLocation = __assign({}, _this.history.location, {\n        search: serialisation.stringify(newState)\n      });\n\n      _this.props.config && _this.props.config.shouldPushState && _this.props.config.shouldPushState(newState, _this.state) ? _this.history.push(nextLocation) : _this.history.replace(nextLocation);\n    };\n\n    var _a = parseConfig(_this.props.config),\n        history = _a.history,\n        serialisation = _a.serialisation;\n\n    _this.history = history; // tslint:disable:no-any Typescript cant handle generic spread yet\n\n    _this.state = __assign({}, props.initialState, serialisation.parse(history.location.search));\n    return _this; // tslint:enable:no-any\n  }\n\n  UrlState.prototype.componentDidMount = function () {\n    var serialisation = parseConfig(this.props.config).serialisation;\n    this.unsubscribe = this.history.listen(this.onLocationChange);\n    this.history.replace(__assign({}, this.history.location, {\n      search: serialisation.stringify(this.state)\n    }));\n  };\n\n  UrlState.prototype.componentDidUpdate = function () {\n    var _a = parseConfig(this.props.config),\n        history = _a.history,\n        serialisation = _a.serialisation;\n\n    if (this.history !== history) {\n      if (this.unsubscribe != null) {\n        this.unsubscribe();\n      }\n\n      this.unsubscribe = history.listen(this.onLocationChange);\n\n      var state = __assign({}, this.props.initialState, serialisation.parse(history.location.search));\n\n      history.replace(__assign({}, history.location, {\n        search: serialisation.stringify(state)\n      }));\n    }\n  };\n\n  UrlState.prototype.componentWillUnmount = function () {\n    if (this.unsubscribe != null) {\n      this.unsubscribe();\n    }\n  };\n\n  UrlState.prototype.render = function () {\n    return this.props.render({\n      setUrlState: this.setUrlState,\n      urlState: this.state\n    });\n  };\n\n  return UrlState;\n}(react_1.Component);\n\nexports.UrlState = UrlState;\n\nexports.withUrlState = function (getInitialState, config) {\n  return function (WrappedComponent) {\n    return function (props) {\n      return react_1.createElement(UrlState, {\n        initialState: getInitialState(props),\n        config: __assign({}, config, {\n          shouldPushState: config && config.shouldPushState && config.shouldPushState(props)\n        }),\n        render: function render(_a) {\n          var urlState = _a.urlState,\n              setUrlState = _a.setUrlState;\n          return react_1.createElement(WrappedComponent, __assign({}, props, {\n            // tslint:disable-line:no-any Typescript cant handle generic spread yet,\n            urlState: urlState,\n            setUrlState: setUrlState\n          }));\n        }\n      });\n    };\n  };\n};","map":null,"metadata":{},"sourceType":"script"}