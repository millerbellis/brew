{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\src\\\\index.js\";\n\nimport React, { useState, useEffect, useContext, useReducer, usePrevious, Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'gestalt/dist/gestalt.css';\nimport Home from './components/main';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './components/app.css';\nimport Context from './context';\nimport Reducer from './reducer';\nimport brews from './components/brews';\nimport Signin from './components/signin';\nimport Signup from './components/signup';\nimport Checkout from './components/checkout';\nimport Navbar from './components/navbar';\n\nvar App = function App() {\n  var initstate = useContext(Context);\n\n  var _useReducer = useReducer(Reducer, initstate),\n      _useReducer2 = _slicedToArray(_useReducer, 3),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1],\n      match = _useReducer2[2];\n\n  var brandId = _this.props.match.params.brandId;\n  return React.createElement(React.Fragment, null, React.createElement(Context.Provider, {\n    value: {\n      state: state,\n      dispatch: dispatch,\n      match: match,\n      brandId: brandId\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(React.Fragment, null, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Suspense, {\n    fallback: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Loading...\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/signin\",\n    component: Signin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/signup\",\n    component: Signup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/checkout\",\n    component: Checkout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/:brandId\",\n    component: brews,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })))))));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n\nif (module.hot) {\n  module.hot.accept();\n}","map":{"version":3,"sources":["C:\\Users\\bellis\\Desktop\\onstore\\lstore\\client\\src\\index.js"],"names":["React","useState","useEffect","useContext","useReducer","usePrevious","Suspense","ReactDOM","Home","BrowserRouter","Router","Route","Switch","serviceWorker","Context","Reducer","brews","Signin","Signup","Checkout","Navbar","App","initstate","state","dispatch","match","brandId","props","params","render","document","getElementById","unregister","module","hot","accept"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext, useReducer, usePrevious, Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport 'gestalt/dist/gestalt.css';\nimport Home from './components/main';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './components/app.css'\nimport Context from './context';\nimport Reducer from './reducer';\n\n\nimport brews from './components/brews';\nimport Signin from './components/signin';\nimport Signup from './components/signup';\nimport Checkout from './components/checkout';\nimport Navbar from './components/navbar';\n\nconst App = () => {\n    const initstate = useContext(Context)\n    const [state, dispatch,match] = useReducer(Reducer, initstate)\n    const brandId = this.props.match.params.brandId;\n        return(\n         <>\n\n            \n           <Context.Provider value={{state, dispatch, match, brandId}}>\n            <Router>\n            <>\n                <Navbar/>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Switch>\n         \n                \n                <Route exact path=\"/\" component={Home}/>\n                <Route path=\"/signin\" component={Signin}/>\n                <Route path=\"/signup\" component={Signup}/>\n                <Route path=\"/checkout\" component={Checkout}/>\n                <Route path=\"/:brandId\" component={brews}/>\n              \n    \n             \n            </Switch>\n          </Suspense>\n          </>\n        </Router>\n        </Context.Provider>\n</>\n          \n        )\n    }\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\nif(module.hot) {\n    module.hot.accept();\n}"]},"metadata":{},"sourceType":"module"}