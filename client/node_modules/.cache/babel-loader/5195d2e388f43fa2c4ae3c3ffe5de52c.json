{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\src\\\\components\\\\checkout.js\";\nimport React, { useState, useEffect, useContext, useReducer, usePrevious } from 'react'; //prettier-ignore\n\nimport { Container, Box, Button, Heading, Text, TextField, Toast, Modal, Spinner } from 'gestalt'; //prettier-ignore\n\nimport { Elements, StripeProvider, CardElement, injectStripe } from 'react-stripe-elements';\nimport { getCart, calculatePrice } from '../utils/index';\n\nvar _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    toast = _useState2[0],\n    setToast = _useState2[1];\n\nvar _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    toastMessage = _useState4[0],\n    setToastMessage = _useState4[1];\n\nvar _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n\nvar _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    address = _useState8[0],\n    setAddress = _useState8[1];\n\nvar _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    city = _useState10[0],\n    setCity = _useState10[1];\n\nvar _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    zip = _useState12[0],\n    setZip = _useState12[1];\n\nvar _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    cemail = _useState14[0],\n    setCEmail = _useState14[1];\n\nvar _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    cartItems = _useState16[0],\n    setCartItems = _useState16[1];\n\nvar _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    orderpro = _useState18[0],\n    setOrderPro = _useState18[1];\n\nvar _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    modal = _useState20[0],\n    setModal = _useState20[1];\n\nuseEffect(function () {\n  setCartItems(getCart());\n}, []);\n\nvar handleConfirmOrder =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(event) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n\n            if (!isFormEmpty()) {\n              _context.next = 4;\n              break;\n            }\n\n            showToast('Fill in all fields!');\n            return _context.abrupt(\"return\");\n\n          case 4:\n            setModal(true);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function handleConfirmOrder(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar isFormEmpty = function isFormEmpty() {\n  return !address || !zip || !city || !cemail;\n};\n\nvar showToast = function showToast(tm) {\n  setToast(true);\n  setToastMessage(tm);\n  setTimeout(function () {\n    return setToast(false);\n  }, 5000);\n};\n\nvar handleSubmitOrder = function handleSubmitOrder() {};\n\nvar closeModal = function closeModal() {\n  setModal(false);\n}; //   const CheckoutForm = injectStripe(_CheckoutForm);\n//   const Checkout = () => {\n//       <StripeProvider apiKey=\"pk_test_QPXQHey0J1AkutAxuoosyA3K\">\n//         <Elements>\n//             <CheckoutForm />\n//         </Elements>\n//     </StripeProvider>\n//   }\n\n\nvar ConfirmationModal = function ConfirmationModal(_ref2) {\n  var orderProcess = _ref2.orderProcess,\n      cartItems = _ref2.cartItems,\n      closeModal = _ref2.closeModal,\n      handleSubmitOrder = _ref2.handleSubmitOrder;\n  return React.createElement(Modal, {\n    accessibilityCloseLabel: \"close\",\n    accessibilityModalLabel: \"Confirm Your Order\",\n    heading: \"Confirm Your Order\",\n    onDismiss: closeModal,\n    footer: React.createElement(Box, {\n      display: \"flex\",\n      marginRight: -1,\n      marginLeft: -1,\n      justifyContent: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Box, {\n      padding: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"lg\",\n      color: \"red\",\n      text: \"Submit\",\n      disabled: orderpro,\n      onClick: handleSubmitOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(Box, {\n      padding: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"lg\",\n      text: \"Cancel\",\n      disabled: orderpro,\n      onClick: closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))),\n    role: \"alertdialog\",\n    size: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, !orderpro && React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    direction: \"column\",\n    padding: 2,\n    color: \"lightWash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, cartItems.map(function (item) {\n    return React.createElement(Box, {\n      key: item._id,\n      padding: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Text, {\n      size: \"lg\",\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, item.name, \" x \", item.quantity, \" - $\", item.quantity * item.price));\n  }), React.createElement(Box, {\n    paddingY: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Text, {\n    size: \"lg\",\n    bold: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Total: \", calculatePrice(cartItems)))), React.createElement(Spinner, {\n    show: orderpro,\n    accessibilityLabel: \"Order Processing Spinner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), orderpro && React.createElement(Text, {\n    align: \"center\",\n    italic: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Submitting Order...\"));\n};\n\nvar _CheckoutForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_CheckoutForm, _React$Component);\n\n  function _CheckoutForm() {\n    _classCallCheck(this, _CheckoutForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_CheckoutForm).apply(this, arguments));\n  }\n\n  _createClass(_CheckoutForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Box, {\n        color: \"darkWash\",\n        margin: 4,\n        padding: 4,\n        shape: \"rounded\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        direction: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        color: \"midnight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Checkout\"), cartItems.length > 0 ? React.createElement(React.Fragment, null, React.createElement(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        direction: \"column\",\n        marginTop: 2,\n        marginBottom: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Text, {\n        color: \"darkGray\",\n        italic: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, cartItems.length, \" Items for Checkout \"), React.createElement(Box, {\n        padding: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, cartItems.map(function (item) {\n        return React.createElement(Box, {\n          key: item._id,\n          padding: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(Text, {\n          color: \"midnight\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, item.name, \" x \", item.quantity, \" - $\", item.quantity * item.price));\n      })), React.createElement(Text, {\n        bold: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Total Amount: \", calculatePrice(cartItems))), React.createElement(\"form\", {\n        onSubmit: handleConfirmOrder,\n        style: {\n          display: 'inlineBlock',\n          textAlign: 'center',\n          maxWidth: 450\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Box, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"address\",\n        name: \"address\",\n        type: \"text\",\n        placeholder: \"shipping address\",\n        onChange: function onChange(event) {\n          return setAddress(event.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"postalCode\",\n        type: \"number\",\n        name: \"postalCode\",\n        placeholder: \"Zip Code\",\n        onChange: function onChange(event) {\n          return setZip(event.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"city\",\n        type: \"text\",\n        name: \"city\",\n        placeholder: \"password\",\n        onChange: function onChange(event) {\n          return setCity(event.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"confirmationEmailAddress\",\n        type: \"email\",\n        name: \"confirmationEmailAddress\",\n        placeholder: \"Confirmation Email Address\",\n        onChange: function onChange(event) {\n          return setCEmail(event.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(CardElement, {\n        id: \"stripe__input\",\n        onReady: function onReady(input) {\n          return input.focus();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"stripe__button\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Submit\")))) : React.createElement(Box, {\n        color: \"darkWash\",\n        shape: \"rounded\",\n        padding: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        align: \"center\",\n        color: \"watermelon\",\n        size: \"xs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Your Cart is Empty\"), React.createElement(Text, {\n        align: \"center\",\n        italic: true,\n        color: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Add some brews!\"))), modal && React.createElement(ConfirmationModal, {\n        orderProcess: orderpro,\n        cartItems: cartItems,\n        closeModal: closeModal,\n        handleSubmitOrder: handleSubmitOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), toast ? React.createElement(Box, {\n        dangerouslySetInlineStyle: {\n          __style: {\n            bottom: 250,\n            left: \"50%\",\n            transform: \"translateX(-50%)\"\n          }\n        },\n        position: \"fixed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Toast, {\n        color: \"orange\",\n        text: toastMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })) : '');\n    }\n  }]);\n\n  return _CheckoutForm;\n}(React.Component);\n\nexport default _CheckoutForm();","map":{"version":3,"sources":["C:\\Users\\bellis\\Desktop\\onstore\\lstore\\client\\src\\components\\checkout.js"],"names":["React","useState","useEffect","useContext","useReducer","usePrevious","Container","Box","Button","Heading","Text","TextField","Toast","Modal","Spinner","Elements","StripeProvider","CardElement","injectStripe","getCart","calculatePrice","toast","setToast","toastMessage","setToastMessage","loading","setLoading","address","setAddress","city","setCity","zip","setZip","cemail","setCEmail","cartItems","setCartItems","orderpro","setOrderPro","modal","setModal","handleConfirmOrder","event","preventDefault","isFormEmpty","showToast","tm","setTimeout","handleSubmitOrder","closeModal","ConfirmationModal","orderProcess","map","item","_id","name","quantity","price","_CheckoutForm","length","display","textAlign","maxWidth","value","input","focus","__style","bottom","left","transform","Component"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext, useReducer, usePrevious} from 'react';\r\n//prettier-ignore\r\nimport {Container, Box, Button, Heading, Text, TextField, Toast, Modal, Spinner} from 'gestalt';\r\n//prettier-ignore\r\nimport {Elements, StripeProvider, CardElement, injectStripe} from 'react-stripe-elements';\r\nimport {getCart, calculatePrice} from '../utils/index';\r\nconst [toast, setToast] = useState(false);\r\nconst [toastMessage, setToastMessage] = useState('');\r\nconst [loading, setLoading] = useState(false)\r\nconst [address, setAddress] = useState('')\r\nconst [city, setCity] = useState('')\r\nconst [zip, setZip] = useState('')\r\nconst [cemail, setCEmail] = useState('')\r\nconst [cartItems, setCartItems] = useState([])\r\nconst [orderpro, setOrderPro] = useState(false)\r\nconst [modal, setModal] = useState(false)\r\nuseEffect(() => {\r\n    setCartItems(getCart())\r\n},[]);\r\n\r\nconst handleConfirmOrder = async event => {\r\n    event.preventDefault();\r\n    if(isFormEmpty()) {\r\n        showToast('Fill in all fields!')\r\n        return;\r\n    }\r\n   \r\n    setModal(true)\r\n}\r\n\r\nconst isFormEmpty = () => {\r\n    return !address || !zip || !city || !cemail\r\n  }\r\n\r\n  const showToast = (tm) => {\r\n    setToast(true)\r\n    setToastMessage(tm)\r\n    setTimeout(() => setToast(false), 5000)\r\n  }\r\n\r\n\r\n  const handleSubmitOrder = () => {\r\n    \r\n  }\r\n\r\n  const closeModal = () => {\r\n    setModal(false)\r\n  }\r\n\r\n//   const CheckoutForm = injectStripe(_CheckoutForm);\r\n\r\n//   const Checkout = () => {\r\n//       <StripeProvider apiKey=\"pk_test_QPXQHey0J1AkutAxuoosyA3K\">\r\n//         <Elements>\r\n//             <CheckoutForm />\r\n//         </Elements>\r\n//     </StripeProvider>\r\n//   }\r\n\r\n  const ConfirmationModal = ({orderProcess,cartItems,closeModal,handleSubmitOrder }) => (\r\n    <Modal accessibilityCloseLabel=\"close\" accessibilityModalLabel=\"Confirm Your Order\" heading=\"Confirm Your Order\" onDismiss={closeModal} footer={\r\n        <Box display=\"flex\" marginRight={-1} marginLeft={-1} justifyContent=\"center\">\r\n            <Box padding={1}>\r\n            <Button size=\"lg\" color=\"red\" text=\"Submit\" disabled={orderpro} onClick={handleSubmitOrder}/>\r\n            </Box>\r\n            <Box padding={1}>\r\n            <Button size=\"lg\" text=\"Cancel\" disabled={orderpro} onClick={closeModal}/>\r\n            </Box>\r\n         </Box>\r\n    } role=\"alertdialog\" size=\"sm\">\r\n    {!orderpro && (\r\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" direction=\"column\" padding={2} color=\"lightWash\">\r\n            {cartItems.map(item => (\r\n                <Box key={item._id} padding={1}>\r\n                <Text size=\"lg\" color=\"red\">\r\n                {item.name} x {item.quantity} - ${item.quantity * item.price}\r\n                </Text>\r\n                </Box>\r\n            ))}\r\n            <Box paddingY={2}>\r\n                <Text size=\"lg\" bold>\r\n                Total: {calculatePrice(cartItems)}\r\n                </Text>\r\n            </Box>\r\n        </Box>\r\n    )}\r\n    <Spinner show={orderpro} accessibilityLabel=\"Order Processing Spinner\" />\r\n    {orderpro && <Text align=\"center\" italic>Submitting Order...</Text>}\r\n  \r\n    </Modal>\r\n)\r\nclass _CheckoutForm extends React.Component {\r\n   \r\n\r\n    \r\n\r\n   \r\n    render() {\r\n        return(\r\n    \r\n        <Container>\r\n        <Box\r\n        color=\"darkWash\"\r\n        margin={4}\r\n        padding={4}\r\n        shape=\"rounded\"\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        direction=\"column\"\r\n        >\r\n        <Heading color=\"midnight\" >Checkout</Heading>\r\n        {cartItems.length > 0 ? (<>\r\n        <Box display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        direction=\"column\"\r\n        marginTop={2}\r\n        marginBottom={6}\r\n        >\r\n        <Text color=\"darkGray\" italic>{cartItems.length} Items for Checkout </Text>\r\n        <Box\r\n        padding={2}\r\n        >\r\n        {cartItems.map(item => (\r\n            <Box key={item._id} padding={1}>\r\n                <Text color=\"midnight\">\r\n                    {item.name} x {item.quantity} - ${item.quantity * item.price}\r\n                </Text>\r\n            </Box>\r\n        ))}\r\n        </Box>\r\n        <Text bold>Total Amount: {calculatePrice(cartItems)}</Text>\r\n        </Box>\r\n        <form onSubmit={handleConfirmOrder} style={{display:'inlineBlock', textAlign:'center', maxWidth: 450}}>\r\n            \r\n            <Box>\r\n            <TextField id=\"address\" name=\"address\" type=\"text\" placeholder=\"shipping address\"  onChange={event => setAddress(event.value)}/>\r\n            <TextField id=\"postalCode\" type=\"number\" name=\"postalCode\" placeholder=\"Zip Code\" onChange={event => setZip(event.value)}/>\r\n            <TextField id=\"city\" type=\"text\" name=\"city\" placeholder=\"password\" onChange={event => setCity(event.value)}/>\r\n            <TextField id=\"confirmationEmailAddress\" type=\"email\" name=\"confirmationEmailAddress\" placeholder=\"Confirmation Email Address\" onChange={event => setCEmail(event.value)}/>\r\n            <CardElement  id=\"stripe__input\" onReady={input => input.focus()}/>\r\n            \r\n            <button id=\"stripe__button\" type=\"submit\">Submit</button>\r\n            </Box>\r\n\r\n        </form>\r\n                </>) : (\r\n                <Box color=\"darkWash\" shape=\"rounded\" padding={4}>\r\n                    <Heading align=\"center\" color=\"watermelon\" size=\"xs\">Your Cart is Empty</Heading>\r\n                    <Text align=\"center\" italic color=\"green\" >Add some brews!</Text>\r\n                </Box>\r\n            )\r\n            }\r\n        </Box>\r\n\r\n            {modal && (\r\n                <ConfirmationModal orderProcess={orderpro} cartItems={cartItems} closeModal={closeModal} handleSubmitOrder={handleSubmitOrder}/>\r\n            )}\r\n\r\n       {toast ? (\r\n       <Box\r\n       dangerouslySetInlineStyle={{\r\n       __style: {\r\n           bottom:250,\r\n           left:\"50%\",\r\n           transform: \"translateX(-50%)\"\r\n       }\r\n       }}\r\n       position=\"fixed\"\r\n       >\r\n       <Toast color=\"orange\" text={toastMessage}  />\r\n       </Box>\r\n       ) : ('')} \r\n \r\n    </Container>\r\n        )\r\n    }\r\n\r\n   \r\n} \r\nexport default _CheckoutForm();\r\n"]},"metadata":{},"sourceType":"module"}