{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\src\\\\components\\\\main.js\";\nimport React, { useState, useEffect, useContext, useReducer, usePrevious } from 'react';\nimport { Container, Box, Heading } from 'gestalt';\nimport Strapi from \"strapi-sdk-javascript/build/main\";\nvar apiUrl = process.env.API_URL || \"http://localhost:1337\";\nvar strapi = new Strapi(apiUrl);\nexport default function Main() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      brands = _useState2[0],\n      setBrands = _useState2[1];\n\n  useEffect(\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return strapi.request('POST', '/graphql', {\n              data: {\n                query: \"query {\\n                        brands {\\n                         _id\\n                         name\\n                         description\\n                         image {\\n                           url\\n                         }\\n                       }\\n                       }\"\n              }\n            });\n\n          case 3:\n            response = _context.sent;\n            setBrands(response.data.brands);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[0, 7]]);\n  })), []);\n  return React.createElement(React.Fragment, null, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginBottom: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    color: \"midnight\",\n    size: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Brew Brands\"))));\n}","map":{"version":3,"sources":["C:\\Users\\bellis\\Desktop\\onstore\\lstore\\client\\src\\components\\main.js"],"names":["React","useState","useEffect","useContext","useReducer","usePrevious","Container","Box","Heading","Strapi","apiUrl","process","env","API_URL","strapi","Main","brands","setBrands","request","data","query","response","console","error"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,EAAgDC,UAAhD,EAA4DC,WAA5D,QAA8E,OAA9E;AACA,SAAQC,SAAR,EAAmBC,GAAnB,EAAwBC,OAAxB,QAAsC,SAAtC;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,IAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,OAAZ,IAAuB,uBAAtC;AACA,IAAMC,MAAM,GAAG,IAAIL,MAAJ,CAAWC,MAAX,CAAf;AACA,eAAe,SAASK,IAAT,GAAgB;AAAA,kBACHd,QAAQ,CAAC,EAAD,CADL;AAAA;AAAA,MACxBe,MADwB;AAAA,MAChBC,SADgB;;AAE1Bf,EAAAA,SAAS;AAAA;AAAA;AAAA;AAAA,2BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEmBY,MAAM,CAACI,OAAP,CAAe,MAAf,EAAuB,UAAvB,EAAmC;AACtDC,cAAAA,IAAI,EAAE;AACFC,gBAAAA,KAAK;AADH;AADgD,aAAnC,CAFnB;;AAAA;AAEEC,YAAAA,QAFF;AAgBJJ,YAAAA,SAAS,CAACI,QAAQ,CAACF,IAAT,CAAcH,MAAf,CAAT;AAhBI;AAAA;;AAAA;AAAA;AAAA;AAkBJM,YAAAA,OAAO,CAACC,KAAR;;AAlBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAF,IAqBR,EArBQ,CAAT;AAwBD,SACA,0CACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,GAAD;AACA,IAAA,OAAO,EAAC,MADR;AAEA,IAAA,cAAc,EAAC,QAFf;AAGA,IAAA,YAAY,EAAE,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKA,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,UAAf;AAA0B,IAAA,IAAI,EAAC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALA,CAHJ,CADJ,CADA;AAiBH","sourcesContent":["import React, {useState, useEffect, useContext, useReducer, usePrevious} from 'react';\r\nimport {Container, Box, Heading} from 'gestalt';\r\nimport Strapi from \"strapi-sdk-javascript/build/main\";\r\nconst apiUrl = process.env.API_URL || \"http://localhost:1337\";\r\nconst strapi = new Strapi(apiUrl);\r\nexport default function Main() {\r\nconst [brands, setBrands] = useState([])\r\n     useEffect( async ()  => {\r\n         try {\r\n            const response = await strapi.request('POST', '/graphql', {\r\n                data: {\r\n                    query: `query {\r\n                        brands {\r\n                         _id\r\n                         name\r\n                         description\r\n                         image {\r\n                           url\r\n                         }\r\n                       }\r\n                       }`\r\n                }\r\n            });\r\n            setBrands(response.data.brands)\r\n         } catch (err){\r\n            console.error(err)\r\n         }\r\n       \r\n    },[])\r\n\r\n\r\n    return(\r\n    <>\r\n        <Container>\r\n            {/* Brands sectoin */}\r\n\r\n            <Box\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n            marginBottom={2}\r\n            >\r\n            <Heading color=\"midnight\" size=\"md\">\r\n                Brew Brands\r\n            </Heading>\r\n            </Box>\r\n        </Container>\r\n      </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}