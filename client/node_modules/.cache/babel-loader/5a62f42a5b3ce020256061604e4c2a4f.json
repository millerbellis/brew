{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\src\\\\components\\\\checkout.js\";\nimport React, { useState, useEffect, useContext, useReducer, usePrevious } from 'react';\nimport { Container, Box, Button, Heading, Text, TextField, Toast } from 'gestalt';\nexport default function Checkout() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      toast = _useState2[0],\n      setToast = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      toastMessage = _useState4[0],\n      setToastMessage = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      address = _useState8[0],\n      setAddress = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      city = _useState10[0],\n      setCity = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      zip = _useState12[0],\n      setZip = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      cemail = _useState14[0],\n      setCEmail = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      cartItems = _useState16[0],\n      setCartItems = _useState16[1];\n\n  var handleConfirmOrder =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(event) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              if (!isFormEmpty()) {\n                _context.next = 4;\n                break;\n              }\n\n              showToast('Fill in all fields!');\n              return _context.abrupt(\"return\");\n\n            case 4:\n              //sign up user\n              try {\n                setLoading(true); //   const response = await strapi.register(username, email, password)\n\n                setLoading(false); //   setToken(response.jwt);\n\n                window.location.href = \"/\";\n              } catch (err) {\n                setLoading(false);\n                showToast(err.message);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function handleConfirmOrder(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var isFormEmpty = function isFormEmpty() {\n    return !address || !zip || !city || !cemail;\n  };\n\n  var showToast = function showToast(tm) {\n    setToast(true);\n    setToastMessage(tm);\n    setTimeout(function () {\n      return setToast(false);\n    }, 5000);\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Box, {\n    color: \"darkWash\",\n    margin: 4,\n    padding: 4,\n    shape: \"rounded\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleConfirmOrder,\n    style: {\n      display: 'inlineBlock',\n      textAlign: 'center',\n      maxWidth: 450\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    color: \"midnight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Checkout\"), React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"address\",\n    name: \"address\",\n    type: \"text\",\n    placeholder: \"shipping address\",\n    onChange: function onChange(event) {\n      return setAddress(event.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"postalCode\",\n    type: \"number\",\n    name: \"postalCode\",\n    placeholder: \"Zip Code\",\n    onChange: function onChange(event) {\n      return setZip(event.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"city\",\n    type: \"text\",\n    name: \"city\",\n    placeholder: \"password\",\n    onChange: function onChange(event) {\n      return setCity(event.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"confirmationEmailAddress\",\n    type: \"email\",\n    name: \"confirmationEmailAddress\",\n    placeholder: \"Confirmation Email Address\",\n    onChange: function onChange(event) {\n      return setCEmail(event.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    id: \"stripe__button\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Submit\")))), toast ? React.createElement(Box, {\n    dangerouslySetInlineStyle: {\n      __style: {\n        bottom: 250,\n        left: \"50%\",\n        transform: \"translateX(-50%)\"\n      }\n    },\n    position: \"fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Toast, {\n    color: \"orange\",\n    text: toastMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })) : '');\n}","map":{"version":3,"sources":["C:\\Users\\bellis\\Desktop\\onstore\\lstore\\client\\src\\components\\checkout.js"],"names":["React","useState","useEffect","useContext","useReducer","usePrevious","Container","Box","Button","Heading","Text","TextField","Toast","Checkout","toast","setToast","toastMessage","setToastMessage","loading","setLoading","address","setAddress","city","setCity","zip","setZip","cemail","setCEmail","cartItems","setCartItems","handleConfirmOrder","event","preventDefault","isFormEmpty","showToast","window","location","href","err","message","tm","setTimeout","display","textAlign","maxWidth","value","__style","bottom","left","transform"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext, useReducer, usePrevious} from 'react';\r\nimport {Container, Box, Button, Heading, Text, TextField, Toast} from 'gestalt';\r\nexport default function Checkout() {\r\n    const [toast, setToast] = useState(false)\r\n    const [toastMessage, setToastMessage] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [address, setAddress] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [zip, setZip] = useState('')\r\n    const [cemail, setCEmail] = useState('')\r\n    const [cartItems, setCartItems] = useState([])\r\n    const handleConfirmOrder = async event => {\r\n        event.preventDefault();\r\n        if(isFormEmpty()) {\r\n            showToast('Fill in all fields!')\r\n            return;\r\n        }\r\n       \r\n        //sign up user\r\n        try {\r\n            setLoading(true);\r\n        //   const response = await strapi.register(username, email, password)\r\n          setLoading(false);\r\n        //   setToken(response.jwt);\r\n      \r\n          window.location.href=\"/\"\r\n        }catch(err) {\r\n          setLoading(false);\r\n          showToast(err.message)\r\n        }\r\n    }\r\n\r\n    const isFormEmpty = () => {\r\n        return !address || !zip || !city || !cemail\r\n      }\r\n    \r\n      const showToast = (tm) => {\r\n        setToast(true)\r\n        setToastMessage(tm)\r\n        setTimeout(() => setToast(false), 5000)\r\n      }\r\n    return(\r\n    \r\n        <Container>\r\n        <Box\r\n        color=\"darkWash\"\r\n        margin={4}\r\n        padding={4}\r\n        shape=\"rounded\"\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        >\r\n        <form onSubmit={handleConfirmOrder} style={{display:'inlineBlock', textAlign:'center', maxWidth: 450}}>\r\n            <Heading color=\"midnight\" >Checkout</Heading>\r\n            <Box>\r\n            <TextField id=\"address\" name=\"address\" type=\"text\" placeholder=\"shipping address\"  onChange={event => setAddress(event.value)}/>\r\n            <TextField id=\"postalCode\" type=\"number\" name=\"postalCode\" placeholder=\"Zip Code\" onChange={event => setZip(event.value)}/>\r\n            <TextField id=\"city\" type=\"text\" name=\"city\" placeholder=\"password\" onChange={event => setCity(event.value)}/>\r\n            <TextField id=\"confirmationEmailAddress\" type=\"email\" name=\"confirmationEmailAddress\" placeholder=\"Confirmation Email Address\" onChange={event => setCEmail(event.value)}/>\r\n            <button id=\"stripe__button\" type=\"submit\">Submit</button>\r\n            </Box>\r\n\r\n        </form>\r\n\r\n        </Box>\r\n       {toast ? (\r\n       <Box\r\n       dangerouslySetInlineStyle={{\r\n       __style: {\r\n           bottom:250,\r\n           left:\"50%\",\r\n           transform: \"translateX(-50%)\"\r\n       }\r\n       }}\r\n       position=\"fixed\"\r\n       >\r\n       <Toast color=\"orange\" text={toastMessage}  />\r\n       </Box>\r\n       ) : ('')} \r\n \r\n    </Container>\r\n      \r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}