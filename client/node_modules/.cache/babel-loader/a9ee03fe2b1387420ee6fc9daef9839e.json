{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\src\\\\components\\\\checkout.js\";\nimport React, { useState, useEffect, useContext, useReducer, usePrevious } from 'react';\nimport { Container, Box, Button, Heading, Text, TextField, Toast } from 'gestalt';\nexport default function Checkout() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      toast = _useState2[0],\n      setToast = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      toastMessage = _useState4[0],\n      setToastMessage = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(event) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              if (!isFormEmpty()) {\n                _context.next = 4;\n                break;\n              }\n\n              showToast('Fill in all fields!');\n              return _context.abrupt(\"return\");\n\n            case 4:\n              _context.prev = 4;\n              setLoading(true);\n              _context.next = 8;\n              return strapi.register(username, email, password);\n\n            case 8:\n              response = _context.sent;\n              setLoading(false);\n              setToken(response.jwt);\n              console.log(response);\n              window.location.href = \"/\";\n              _context.next = 19;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](4);\n              setLoading(false);\n              showToast(_context.t0.message);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[4, 15]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var isFormEmpty = function isFormEmpty() {\n    return !username || !email || !password;\n  };\n\n  var showToast = function showToast(tm) {\n    setToast(true);\n    setToastMessage(tm);\n    setTimeout(function () {\n      return setToast(false);\n    }, 5000);\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Box, {\n    color: \"darkWash\",\n    margin: 4,\n    padding: 4,\n    shape: \"rounded\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleConfirmOrder,\n    style: {\n      display: 'inlineBlock',\n      textAlign: 'center',\n      maxWidth: 450\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    color: \"midnight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Checkout\"), React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"address\",\n    name: \"address\",\n    type: \"text\",\n    placeholder: \"shipping address\",\n    onChange: function onChange(event) {\n      return setUsername(event.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"email\",\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"email address\",\n    onChange: function onChange(event) {\n      return setEmail(event.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"password\",\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"password\",\n    onChange: function onChange(event) {\n      return setPassword(event.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Button, {\n    disabled: loading,\n    inline: true,\n    color: \"blue\",\n    text: \"Submit\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })))), toast ? React.createElement(Box, {\n    dangerouslySetInlineStyle: {\n      __style: {\n        bottom: 250,\n        left: \"50%\",\n        transform: \"translateX(-50%)\"\n      }\n    },\n    position: \"fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Toast, {\n    color: \"orange\",\n    text: toastMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })) : '');\n}","map":{"version":3,"sources":["C:\\Users\\bellis\\Desktop\\onstore\\lstore\\client\\src\\components\\checkout.js"],"names":["React","useState","useEffect","useContext","useReducer","usePrevious","Container","Box","Button","Heading","Text","TextField","Toast","Checkout","toast","setToast","toastMessage","setToastMessage","loading","setLoading","handleSubmit","event","preventDefault","isFormEmpty","showToast","strapi","register","username","email","password","response","setToken","jwt","console","log","window","location","href","message","tm","setTimeout","handleConfirmOrder","display","textAlign","maxWidth","setUsername","value","setEmail","setPassword","__style","bottom","left","transform"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext, useReducer, usePrevious} from 'react';\r\nimport {Container, Box, Button, Heading, Text, TextField, Toast} from 'gestalt';\r\nexport default function Checkout() {\r\n    const [toast, setToast] = useState(false)\r\n    const [toastMessage, setToastMessage] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        if(isFormEmpty()) {\r\n            showToast('Fill in all fields!')\r\n            return;\r\n        }\r\n       \r\n        //sign up user\r\n        try {\r\n            setLoading(true);\r\n          const response = await strapi.register(username, email, password)\r\n          setLoading(false);\r\n          setToken(response.jwt);\r\n          console.log(response);\r\n          window.location.href=\"/\"\r\n        }catch(err) {\r\n          setLoading(false);\r\n          showToast(err.message)\r\n        }\r\n    }\r\n\r\n    const isFormEmpty = () => {\r\n        return !username || !email || !password\r\n      }\r\n    \r\n      const showToast = (tm) => {\r\n        setToast(true)\r\n        setToastMessage(tm)\r\n        setTimeout(() => setToast(false), 5000)\r\n      }\r\n    return(\r\n    \r\n        <Container>\r\n        <Box\r\n        color=\"darkWash\"\r\n        margin={4}\r\n        padding={4}\r\n        shape=\"rounded\"\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        >\r\n        <form onSubmit={handleConfirmOrder} style={{display:'inlineBlock', textAlign:'center', maxWidth: 450}}>\r\n            <Heading color=\"midnight\" >Checkout</Heading>\r\n            <Box>\r\n            <TextField id=\"address\" name=\"address\" type=\"text\" placeholder=\"shipping address\"  onChange={event => setUsername(event.value)}/>\r\n            <TextField id=\"email\" type=\"email\" name=\"email\" placeholder=\"email address\" onChange={event => setEmail(event.value)}/>\r\n            <TextField id=\"password\" type=\"password\" name=\"password\" placeholder=\"password\" onChange={event => setPassword(event.value)}/>\r\n\r\n            <Button disabled={loading} inline color=\"blue\" text=\"Submit\" type=\"submit\"/>\r\n            </Box>\r\n\r\n        </form>\r\n\r\n        </Box>\r\n       {toast ? (\r\n       <Box\r\n       dangerouslySetInlineStyle={{\r\n       __style: {\r\n           bottom:250,\r\n           left:\"50%\",\r\n           transform: \"translateX(-50%)\"\r\n       }\r\n       }}\r\n       position=\"fixed\"\r\n       >\r\n       <Toast color=\"orange\" text={toastMessage}  />\r\n       </Box>\r\n       ) : ('')} \r\n \r\n    </Container>\r\n      \r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}