{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\src\\\\components\\\\checkout.js\";\nimport React, { useState, useEffect, useContext, useReducer, usePrevious } from 'react'; //prettier-ignore\n\nimport { Container, Box, Button, Heading, Text, TextField, Toast, Modal, Spinner } from 'gestalt'; //prettier-ignore\n\nimport { Elements, StripeProvider, CardElement, injectStripe } from 'react-stripe-elements';\nimport { getCart, calculatePrice } from '../utils/index';\nexport default function Checkout() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      toast = _useState2[0],\n      setToast = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      toastMessage = _useState4[0],\n      setToastMessage = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      address = _useState8[0],\n      setAddress = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      city = _useState10[0],\n      setCity = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      zip = _useState12[0],\n      setZip = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      cemail = _useState14[0],\n      setCEmail = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      cartItems = _useState16[0],\n      setCartItems = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      orderpro = _useState18[0],\n      setOrderPro = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      modal = _useState20[0],\n      setModal = _useState20[1];\n\n  useEffect(function () {\n    setCartItems(getCart());\n  }, []);\n\n  var handleConfirmOrder =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(event) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              if (!isFormEmpty()) {\n                _context.next = 4;\n                break;\n              }\n\n              showToast('Fill in all fields!');\n              return _context.abrupt(\"return\");\n\n            case 4:\n              setModal(true);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function handleConfirmOrder(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var isFormEmpty = function isFormEmpty() {\n    return !address || !zip || !city || !cemail;\n  };\n\n  var showToast = function showToast(tm) {\n    setToast(true);\n    setToastMessage(tm);\n    setTimeout(function () {\n      return setToast(false);\n    }, 5000);\n  };\n\n  var handleSubmitOrder = function handleSubmitOrder() {};\n\n  var closeModal = function closeModal() {\n    setModal(false);\n  }; //   const CheckoutForm = injectStripe(Checkout);\n  //   const checkout = () => {\n  //       <>\n  //       <StripeProvider apiKey=\"pk_test_QPXQHey0J1AkutAxuoosyA3K\">\n  //         <Elements>\n  //             <CheckoutForm />\n  //         </Elements>\n  //     </StripeProvider>\n  //     </>\n  //   }\n\n\n  var ConfirmationModal = function ConfirmationModal(_ref2) {\n    var orderProcess = _ref2.orderProcess,\n        cartItems = _ref2.cartItems,\n        closeModal = _ref2.closeModal,\n        handleSubmitOrder = _ref2.handleSubmitOrder;\n    return React.createElement(Modal, {\n      accessibilityCloseLabel: \"close\",\n      accessibilityModalLabel: \"Confirm Your Order\",\n      heading: \"Confirm Your Order\",\n      onDismiss: closeModal,\n      footer: React.createElement(Box, {\n        display: \"flex\",\n        marginRight: -1,\n        marginLeft: -1,\n        justifyContent: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Box, {\n        padding: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"lg\",\n        color: \"red\",\n        text: \"Submit\",\n        disabled: orderpro,\n        onClick: handleSubmitOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(Box, {\n        padding: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"lg\",\n        text: \"Cancel\",\n        disabled: orderpro,\n        onClick: closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))),\n      role: \"alertdialog\",\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, !orderpro && React.createElement(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      direction: \"column\",\n      padding: 2,\n      color: \"lightWash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, cartItems.map(function (item) {\n      return React.createElement(Box, {\n        key: item._id,\n        padding: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Text, {\n        size: \"lg\",\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, item.name, \" x \", item.quantity, \" - $\", item.quantity * item.price));\n    }), React.createElement(Box, {\n      paddingY: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Text, {\n      size: \"lg\",\n      bold: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Total: \", calculatePrice(cartItems)))), React.createElement(Spinner, {\n      show: orderpro,\n      accessibilityLabel: \"Order Processing Spinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), orderpro && React.createElement(Text, {\n      align: \"center\",\n      italic: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Submitting Order...\"));\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Box, {\n    color: \"darkWash\",\n    margin: 4,\n    padding: 4,\n    shape: \"rounded\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    color: \"midnight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Checkout\"), cartItems.length > 0 ? React.createElement(React.Fragment, null, React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    direction: \"column\",\n    marginTop: 2,\n    marginBottom: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Text, {\n    color: \"darkGray\",\n    italic: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, cartItems.length, \" Items for Checkout \"), React.createElement(Box, {\n    padding: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, cartItems.map(function (item) {\n    return React.createElement(Box, {\n      key: item._id,\n      padding: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Text, {\n      color: \"midnight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, item.name, \" x \", item.quantity, \" - $\", item.quantity * item.price));\n  })), React.createElement(Text, {\n    bold: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Total Amount: \", calculatePrice(cartItems))), React.createElement(\"form\", {\n    onSubmit: handleConfirmOrder,\n    style: {\n      display: 'inlineBlock',\n      textAlign: 'center',\n      maxWidth: 450\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"address\",\n    name: \"address\",\n    type: \"text\",\n    placeholder: \"shipping address\",\n    onChange: function onChange(event) {\n      return setAddress(event.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"postalCode\",\n    type: \"number\",\n    name: \"postalCode\",\n    placeholder: \"Zip Code\",\n    onChange: function onChange(event) {\n      return setZip(event.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"city\",\n    type: \"text\",\n    name: \"city\",\n    placeholder: \"password\",\n    onChange: function onChange(event) {\n      return setCity(event.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"confirmationEmailAddress\",\n    type: \"email\",\n    name: \"confirmationEmailAddress\",\n    placeholder: \"Confirmation Email Address\",\n    onChange: function onChange(event) {\n      return setCEmail(event.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(CardElement, {\n    id: \"stripe__input\",\n    onReady: function onReady(input) {\n      return input.focus();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    id: \"stripe__button\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Submit\")))) : React.createElement(Box, {\n    color: \"darkWash\",\n    shape: \"rounded\",\n    padding: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    align: \"center\",\n    color: \"watermelon\",\n    size: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Your Cart is Empty\"), React.createElement(Text, {\n    align: \"center\",\n    italic: true,\n    color: \"green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Add some brews!\"))), modal && React.createElement(ConfirmationModal, {\n    orderProcess: orderpro,\n    cartItems: cartItems,\n    closeModal: closeModal,\n    handleSubmitOrder: handleSubmitOrder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), toast ? React.createElement(Box, {\n    dangerouslySetInlineStyle: {\n      __style: {\n        bottom: 250,\n        left: \"50%\",\n        transform: \"translateX(-50%)\"\n      }\n    },\n    position: \"fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(Toast, {\n    color: \"orange\",\n    text: toastMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  })) : '');\n}","map":{"version":3,"sources":["C:\\Users\\bellis\\Desktop\\onstore\\lstore\\client\\src\\components\\checkout.js"],"names":["React","useState","useEffect","useContext","useReducer","usePrevious","Container","Box","Button","Heading","Text","TextField","Toast","Modal","Spinner","Elements","StripeProvider","CardElement","injectStripe","getCart","calculatePrice","Checkout","toast","setToast","toastMessage","setToastMessage","loading","setLoading","address","setAddress","city","setCity","zip","setZip","cemail","setCEmail","cartItems","setCartItems","orderpro","setOrderPro","modal","setModal","handleConfirmOrder","event","preventDefault","isFormEmpty","showToast","tm","setTimeout","handleSubmitOrder","closeModal","ConfirmationModal","orderProcess","map","item","_id","name","quantity","price","length","display","textAlign","maxWidth","value","input","focus","__style","bottom","left","transform"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext, useReducer, usePrevious} from 'react';\r\n//prettier-ignore\r\nimport {Container, Box, Button, Heading, Text, TextField, Toast, Modal, Spinner} from 'gestalt';\r\n//prettier-ignore\r\nimport {Elements, StripeProvider, CardElement, injectStripe} from 'react-stripe-elements';\r\nimport {getCart, calculatePrice} from '../utils/index';\r\nexport default function  Checkout() {\r\n    const [toast, setToast] = useState(false)\r\n    const [toastMessage, setToastMessage] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [address, setAddress] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [zip, setZip] = useState('')\r\n    const [cemail, setCEmail] = useState('')\r\n    const [cartItems, setCartItems] = useState([])\r\n    const [orderpro, setOrderPro] = useState(false)\r\n    const [modal, setModal] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setCartItems(getCart())\r\n    },[])\r\n\r\n    const handleConfirmOrder = async event => {\r\n        event.preventDefault();\r\n        if(isFormEmpty()) {\r\n            showToast('Fill in all fields!')\r\n            return;\r\n        }\r\n       \r\n        setModal(true)\r\n    }\r\n\r\n    const isFormEmpty = () => {\r\n        return !address || !zip || !city || !cemail\r\n      }\r\n    \r\n      const showToast = (tm) => {\r\n        setToast(true)\r\n        setToastMessage(tm)\r\n        setTimeout(() => setToast(false), 5000)\r\n      }\r\n\r\n\r\n      const handleSubmitOrder = () => {\r\n        \r\n      }\r\n\r\n      const closeModal = () => {\r\n        setModal(false)\r\n      }\r\n\r\n    //   const CheckoutForm = injectStripe(Checkout);\r\n\r\n    //   const checkout = () => {\r\n    //       <>\r\n    //       <StripeProvider apiKey=\"pk_test_QPXQHey0J1AkutAxuoosyA3K\">\r\n    //         <Elements>\r\n    //             <CheckoutForm />\r\n    //         </Elements>\r\n    //     </StripeProvider>\r\n    //     </>\r\n    //   }\r\n\r\n      const ConfirmationModal = ({orderProcess,cartItems,closeModal,handleSubmitOrder }) => (\r\n        <Modal accessibilityCloseLabel=\"close\" accessibilityModalLabel=\"Confirm Your Order\" heading=\"Confirm Your Order\" onDismiss={closeModal} footer={\r\n            <Box display=\"flex\" marginRight={-1} marginLeft={-1} justifyContent=\"center\">\r\n                <Box padding={1}>\r\n                <Button size=\"lg\" color=\"red\" text=\"Submit\" disabled={orderpro} onClick={handleSubmitOrder}/>\r\n                </Box>\r\n                <Box padding={1}>\r\n                <Button size=\"lg\" text=\"Cancel\" disabled={orderpro} onClick={closeModal}/>\r\n                </Box>\r\n             </Box>\r\n        } role=\"alertdialog\" size=\"sm\">\r\n        {!orderpro && (\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" direction=\"column\" padding={2} color=\"lightWash\">\r\n                {cartItems.map(item => (\r\n                    <Box key={item._id} padding={1}>\r\n                    <Text size=\"lg\" color=\"red\">\r\n                    {item.name} x {item.quantity} - ${item.quantity * item.price}\r\n                    </Text>\r\n                    </Box>\r\n                ))}\r\n                <Box paddingY={2}>\r\n                    <Text size=\"lg\" bold>\r\n                    Total: {calculatePrice(cartItems)}\r\n                    </Text>\r\n                </Box>\r\n            </Box>\r\n        )}\r\n        <Spinner show={orderpro} accessibilityLabel=\"Order Processing Spinner\" />\r\n        {orderpro && <Text align=\"center\" italic>Submitting Order...</Text>}\r\n      \r\n        </Modal>\r\n    )\r\n    return(\r\n    \r\n        <Container>\r\n        <Box\r\n        color=\"darkWash\"\r\n        margin={4}\r\n        padding={4}\r\n        shape=\"rounded\"\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        direction=\"column\"\r\n        >\r\n        <Heading color=\"midnight\" >Checkout</Heading>\r\n        {cartItems.length > 0 ? (<>\r\n        <Box display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        direction=\"column\"\r\n        marginTop={2}\r\n        marginBottom={6}\r\n        >\r\n        <Text color=\"darkGray\" italic>{cartItems.length} Items for Checkout </Text>\r\n        <Box\r\n        padding={2}\r\n        >\r\n        {cartItems.map(item => (\r\n            <Box key={item._id} padding={1}>\r\n                <Text color=\"midnight\">\r\n                    {item.name} x {item.quantity} - ${item.quantity * item.price}\r\n                </Text>\r\n            </Box>\r\n        ))}\r\n        </Box>\r\n        <Text bold>Total Amount: {calculatePrice(cartItems)}</Text>\r\n        </Box>\r\n        <form onSubmit={handleConfirmOrder} style={{display:'inlineBlock', textAlign:'center', maxWidth: 450}}>\r\n            \r\n            <Box>\r\n            <TextField id=\"address\" name=\"address\" type=\"text\" placeholder=\"shipping address\"  onChange={event => setAddress(event.value)}/>\r\n            <TextField id=\"postalCode\" type=\"number\" name=\"postalCode\" placeholder=\"Zip Code\" onChange={event => setZip(event.value)}/>\r\n            <TextField id=\"city\" type=\"text\" name=\"city\" placeholder=\"password\" onChange={event => setCity(event.value)}/>\r\n            <TextField id=\"confirmationEmailAddress\" type=\"email\" name=\"confirmationEmailAddress\" placeholder=\"Confirmation Email Address\" onChange={event => setCEmail(event.value)}/>\r\n            <CardElement  id=\"stripe__input\" onReady={input => input.focus()}/>\r\n            \r\n            <button id=\"stripe__button\" type=\"submit\">Submit</button>\r\n            </Box>\r\n\r\n        </form>\r\n                </>) : (\r\n                <Box color=\"darkWash\" shape=\"rounded\" padding={4}>\r\n                    <Heading align=\"center\" color=\"watermelon\" size=\"xs\">Your Cart is Empty</Heading>\r\n                    <Text align=\"center\" italic color=\"green\" >Add some brews!</Text>\r\n                </Box>\r\n            )\r\n            }\r\n        </Box>\r\n\r\n            {modal && (\r\n                <ConfirmationModal orderProcess={orderpro} cartItems={cartItems} closeModal={closeModal} handleSubmitOrder={handleSubmitOrder}/>\r\n            )}\r\n\r\n       {toast ? (\r\n       <Box\r\n       dangerouslySetInlineStyle={{\r\n       __style: {\r\n           bottom:250,\r\n           left:\"50%\",\r\n           transform: \"translateX(-50%)\"\r\n       }\r\n       }}\r\n       position=\"fixed\"\r\n       >\r\n       <Toast color=\"orange\" text={toastMessage}  />\r\n       </Box>\r\n       ) : ('')} \r\n \r\n    </Container>\r\n      \r\n    )\r\n\r\n   \r\n}\r\n"]},"metadata":{},"sourceType":"module"}