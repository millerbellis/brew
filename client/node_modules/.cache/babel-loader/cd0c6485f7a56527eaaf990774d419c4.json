{"ast":null,"code":"var CART_KEY = 'cart';\nexport var calculatePrice = function calculatePrice(items) {\n  return \"$\".concat(items.reduce(function (acc, item) {\n    return acc + item.quantity * item.price;\n  }, 0).toFixed(2));\n};\nexport var setCart = function setCart(value) {\n  var cartKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CART_KEY;\n\n  if (localStorage) {\n    localStorage.setItem(cartKey, JSON.stringify(value));\n  }\n};\nexport var getCart = function getCart() {\n  var cartKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : CART_KEY;\n\n  if (localStorage && localStorage.getItem(cartKey)) {\n    return JSON.parse(localStorage.getItem(cartKey));\n  }\n\n  return [];\n};","map":{"version":3,"sources":["C:\\Users\\bellis\\Desktop\\onstore\\lstore\\client\\src\\utils\\index.js"],"names":["CART_KEY","calculatePrice","items","reduce","acc","item","quantity","price","toFixed","setCart","value","cartKey","localStorage","setItem","JSON","stringify","getCart","getItem","parse"],"mappings":"AAAA,IAAMA,QAAQ,GAAG,MAAjB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AACnC,oBAAWA,KAAK,CACXC,MADM,CACC,UAACC,GAAD,EAAMC,IAAN;AAAA,WAAeD,GAAG,GAAGC,IAAI,CAACC,QAAL,GAAgBD,IAAI,CAACE,KAA1C;AAAA,GADD,EACkD,CADlD,EAENC,OAFM,CAEE,CAFF,CAAX;AAIH,CALM;AAOP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAA+B;AAAA,MAAvBC,OAAuB,uEAAbX,QAAa;;AAClD,MAAGY,YAAH,EAAiB;AACbA,IAAAA,YAAY,CAACC,OAAb,CAAqBF,OAArB,EAA8BG,IAAI,CAACC,SAAL,CAAeL,KAAf,CAA9B;AACH;AACJ,CAJM;AAMP,OAAO,IAAMM,OAAO,GAAG,SAAVA,OAAU,GAAwB;AAAA,MAAvBL,OAAuB,uEAAbX,QAAa;;AAC3C,MAAGY,YAAY,IAAIA,YAAY,CAACK,OAAb,CAAqBN,OAArB,CAAnB,EAAkD;AAC9C,WAAOG,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACK,OAAb,CAAqBN,OAArB,CAAX,CAAP;AACH;;AACD,SAAO,EAAP;AACH,CALM","sourcesContent":["const CART_KEY = 'cart';\r\n\r\nexport const calculatePrice = items => {\r\n    return `$${items\r\n        .reduce((acc, item) => acc + item.quantity * item.price, 0)\r\n        .toFixed(2)\r\n    }`\r\n}\r\n\r\nexport const setCart = (value, cartKey = CART_KEY) => {\r\n    if(localStorage) {\r\n        localStorage.setItem(cartKey, JSON.stringify(value));\r\n    }\r\n}\r\n\r\nexport const getCart = (cartKey = CART_KEY) => {\r\n    if(localStorage && localStorage.getItem(cartKey)) {\r\n        return JSON.parse(localStorage.getItem(cartKey))\r\n    }\r\n    return [];\r\n}"]},"metadata":{},"sourceType":"module"}