{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\bellis\\\\Desktop\\\\onstore\\\\lstore\\\\client\\\\src\\\\components\\\\brews.js\";\nimport React, { useState, useEffect, useContext, useReducer, usePrevious } from 'react';\nimport { BarLoader } from 'react-spinners';\nimport TodosContext from '../context';\nimport { Box } from 'gestalt';\nimport Strapi from \"strapi-sdk-javascript/build/main\";\nvar apiUrl = process.env.API_URL || \"http://localhost:1337\";\nvar strapi = new Strapi(apiUrl);\nexport default function Brews() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      urlParam = _useState2[0],\n      seturlParam = _useState2[1];\n\n  useEffect(\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var url, _ref2, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = window.location.pathname.substr(1);\n            seturlParam(url);\n            _context.next = 4;\n            return strapi.request('POST', '/graphql', {\n              data: {\n                query: \"query {\\n                    brand(id: \\\"\".concat(urlParam, \"\\\") {\\n                    _id\\n                    name\\n                    brews {\\n                      _id\\n                      name\\n                      image{\\n                        url\\n                      }\\n                      price\\n                      \\n                      \\n                    }\\n                  }\\n                }\")\n              }\n            });\n\n          case 4:\n            _ref2 = _context.sent;\n            data = _ref2.data;\n            console.log(data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  })), []);\n\n  var getData =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              try {} catch (err) {\n                console.error(err);\n              }\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    return function getData() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(TodosContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, function (value) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, urlParam);\n  });\n}","map":{"version":3,"sources":["C:\\Users\\bellis\\Desktop\\onstore\\lstore\\client\\src\\components\\brews.js"],"names":["React","useState","useEffect","useContext","useReducer","usePrevious","BarLoader","TodosContext","Box","Strapi","apiUrl","process","env","API_URL","strapi","Brews","urlParam","seturlParam","url","window","location","pathname","substr","request","data","query","console","log","getData","err","error","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,EAAgDC,UAAhD,EAA4DC,WAA5D,QAA8E,OAA9E;AACA,SAASC,SAAT,QAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,YAAzB;AACA,SAAQC,GAAR,QAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,IAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,OAAZ,IAAuB,uBAAtC;AACA,IAAMC,MAAM,GAAG,IAAIL,MAAJ,CAAWC,MAAX,CAAf;AACA,eAAe,SAASK,KAAT,GAAiB;AAAA,kBACId,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,MACrBe,QADqB;AAAA,MACXC,WADW;;AAE5Bf,EAAAA,SAAS;AAAA;AAAA;AAAA;AAAA,2BAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACAgB,YAAAA,GADA,GACMC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,MAAzB,CAAgC,CAAhC,CADN;AAENL,YAAAA,WAAW,CAACC,GAAD,CAAX;AAFM;AAAA,mBAGeJ,MAAM,CAACS,OAAP,CAAe,MAAf,EAAuB,UAAvB,EAAmC;AACpDC,cAAAA,IAAI,EAAE;AACFC,gBAAAA,KAAK,qDACYT,QADZ;AADH;AAD8C,aAAnC,CAHf;;AAAA;AAAA;AAGCQ,YAAAA,IAHD,SAGCA,IAHD;AAuBPE,YAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AAvBO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAwBP,EAxBO,CAAT;;AA0BA,MAAMI,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAEZ,kBAAI,CAEF,CAFF,CAEG,OAAOC,GAAP,EAAW;AACVH,gBAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AAEF;;AAPU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPD,OAAO;AAAA;AAAA;AAAA,KAAb;;AAYA,SACI,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACD,UAAAG,KAAK;AAAA,WACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMf,QAAN,CADI;AAAA,GADJ,CADJ;AAQH","sourcesContent":["import React, {useState, useEffect, useContext, useReducer, usePrevious} from 'react';\r\nimport { BarLoader} from 'react-spinners'\r\nimport TodosContext from '../context';\r\nimport {Box} from 'gestalt';\r\nimport Strapi from \"strapi-sdk-javascript/build/main\";\r\nconst apiUrl = process.env.API_URL || \"http://localhost:1337\";\r\nconst strapi = new Strapi(apiUrl);\r\nexport default function Brews() {\r\n    const [urlParam, seturlParam] = useState('');\r\n    useEffect(async() => {\r\n        const url = window.location.pathname.substr(1);\r\n        seturlParam(url)\r\n        const {data} = await strapi.request('POST', '/graphql', {\r\n            data: {\r\n                query: `query {\r\n                    brand(id: \"${urlParam}\") {\r\n                    _id\r\n                    name\r\n                    brews {\r\n                      _id\r\n                      name\r\n                      image{\r\n                        url\r\n                      }\r\n                      price\r\n                      \r\n                      \r\n                    }\r\n                  }\r\n                }`\r\n            }\r\n        });\r\n       console.log(data)\r\n    },[])\r\n\r\n    const getData = async () => {\r\n        \r\n        try {\r\n            \r\n         } catch (err){\r\n            console.error(err)\r\n           \r\n         }\r\n    }\r\n\r\n   \r\n    \r\n    return(\r\n        <TodosContext.Consumer>\r\n      {value => \r\n        <div>{urlParam}</div>\r\n\r\n      }\r\n      </TodosContext.Consumer>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}